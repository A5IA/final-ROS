1 หน้าที่ของ ROS Master 
เป็นการจัดเตรียมการลงทะเบียนชื่อและค้นหาองค์ประกอบต่างๆใน ROS หากไม่มี Master โหนดจะ1ไม่สามารถค้นหาซึ่งกันและกันเพื่อแลกเปลี่ยนข้อความหรือเรียกใช้ได้ ทำหน้าที่เป็น server สำหรับให้ node หลายๆตัวเชื่อมต่อกัน และสามารถส่ง message หากันได้ คำสั่งที่ใช้รัน master คือ roscore  เมื่อรัน master แล้ว สามารถที่จะสร้าง node ต่างๆขึ้นมาเพื่อดึงข้อมูลได้ การเชื่อมกันระหว่าง node จะส่งข้อความหากันผ่าน topic
2 การทำงาน ROS Topics และ ROS Service
ROS Topics : Messages จะถูกส่งผ่าน โดยการ Publish จาก Node หนึ่งส่งออกไปยัง given topic และทำการ Subscribe ตัว Node ที่สนใจไปยัง Topic ที่เหมาะสม โดยในที่ Topics คือชื่อที่ใช้ในการระบุตัวตนและเนื้อหาของ Message นั้นๆ ซึ่งอาจมี หลาย publishers และ subscribers สำหรับ topic เดียว หรือ node เดียว ที่สามารถ publish / subscribe ไปยังหลาย topics ได้ ซึ่งโดยทั่วไปแล้ว publishers และ subscribers นั้นจะไม่ทราบถึงการมีอยู่ของกันและกัน หรือการแยกกันผลิตข้อมูลตามหน้าที่ของตัวมัน
ROS Services : คือรูปแบบการ publish / subscribe เป็นแนวคิดในการสื่อสารที่ยืดหยุ่นมาก แต่การขนส่งทางเดียวอย่างต่อเนื่องนั้นไม่เหมาะสม จึงมีการใช้บริการ Request / reply กำหนดการส่งข้อความ โดยสร้างข้อความหนึ่งสำหรับการร้องขอและอีกหนึ่งสำหรับการตอบกลับ เพื่อส่งข้อความที่ร้องขอไปยังโหนดที่ร้องขอ
3 ความแตกต่างของ Topic กับ message
ความแตกต่างของ Topic คือ เป็นช่องทางสื่อสารที่ให้โปรแกรมและโมดูลต่าง ๆ ภายในระบบ ROS ส่งข้อมูลไปรับข้อมูลจากกันได้ โดย Topic จะเป็นชื่อที่ใช้ระบุประเภทของข้อมูลที่จะถูกส่งหรือรับระหว่างโปรแกรม ในการส่งหรือรับข้อมูลผ่าน Topic จะใช้การส่งข้อมูลแบบ Publish-Subscribe โดยโปรแกรมหรือโมดูลที่สนใจจะสมัครตัวเป็น Subscriber เพื่อรับข้อมูลจาก Topic นั้นและโปรแกรมหรือโมดูลที่ต้องการส่งข้อมูลจะสมัครตัวเป็น Publisher เพื่อส่งข้อมูลไปยัง Topic นั้น ในกระบวนการนี้ Topic จะทำหน้าที่เป็นตัวกลางในการแลกเปลี่ยนข้อมูลระหว่างโปรแกรมหรือโมดูลต่าง ๆ ภายในระบบ ROS
และ Message คือ โครงสร้างข้อมูลที่ใช้ในการแลกเปลี่ยนข้อมูลระหว่างโปรแกรมหรือโมดูลผ่าน Topic ในแต่ละ Topic จะมี Message Type ที่กำหนดลักษณะและโครงสร้างของข้อมูลที่จะถูกส่งหรือรับผ่าน Topic นั้น ๆ ข้อมูลที่ส่งหรือรับจะมีลักษณะและโครงสร้างตามที่กำหนดใน Message Type มี Nodes ต่างๆสามารถสื่อสารซึ่งกันและกันโดยการรับส่ง Message หากัน โดยที่ตัวMessage และ Message สามารถรวมโครงสร้างและ Arrays ที่ซับซ้อนได้ คล้ายกับโครงสร้างของ C


4 ความแตกต่างการใช้งาน ROS Topics  กับ ROS Services
ROS Topics ใช้ในการสื่อสารแบบ Publish-Subscribe ซึ่งเป็นโครงสร้างการส่งข้อมูลแบบหนึ่งไปยังหลายโปรแกรม
มีโปรแกรมที่สนใจข้อมูลจะสมัครตัวเป็น Subscriber เพื่อรับข้อมูลจาก Topic ที่เฉพาะเจาะจง และที่ต้องการส่งข้อมูลจะสมัครตัวเป็น Publisher เพื่อส่งข้อมูลไปยัง Topic ที่เฉพาะเจาะจง มีการสื่อสารผ่าน Topics เป็นแบบ asynchronous ซึ่งหมายความว่าผู้ส่งข้อมูลไม่ต้องรอผู้รับรอบเดียวก่อนจึงจะส่งข้อมูลถัดไปได้
และ ROS Services ใช้ในการสื่อสารแบบ Request-Response ซึ่งเป็นโครงสร้างการส่งข้อมูลระหว่างโปรแกรมที่ต้องการข้อมูลกับโปรแกรมที่มีข้อมูล โปรแกรมหรือโมดูลที่ต้องการข้อมูลจะส่ง Request ไปยัง Service และรอรับ Response กลับมาจาก Service และService จะต้องมีการกำหนดและระบุ Request และ Response Message Types ที่ใช้ในการส่งข้อมูลระหว่างสองฝั่ง
